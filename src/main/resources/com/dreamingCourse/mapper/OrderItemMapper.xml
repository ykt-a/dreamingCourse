<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dreamingCourse.mapper.OrderItemMapper" >

  <resultMap id="BaseResultMap" type="com.dreamingCourse.entity.OrderItem" >
    <result column="current_unit_price" property="currentUnitPrice" jdbcType="DECIMAL" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="order_number" property="orderNumber"  jdbcType="INTEGER"/>
    <result column="course_id" property="courseId"  jdbcType="INTEGER"/>
    <association column="course_id" property="courseName" select="getCourseName" ></association>
  </resultMap>


  <sql id="Base_Column_List" >
    course_id,current_unit_price,quantity, course_name,order_number
  </sql>
   <select id="getCourseName" resultType="String" parameterType="int">
     select name from ykt_course where id = #{courseId,jdbcType=INTEGER}
   </select>

  <select id="findItemByUserIdAndCourseId" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from ykt_order_item
    where user_id = #{userId,jdbcType=INTEGER} and  course_id=#{courseId,jdbcType=INTEGER} and order_number=#{orderNumber,jdbcType=INTEGER}
  </select>


  <insert id="batchInsert" parameterType="list">
    insert into ykt_order_item (course_id,order_number,user_id,
      current_unit_price, quantity)
    values
    <foreach collection="orderItemList" index="index" item="item" separator=",">
      (
      #{item.courseId},#{item.orderNumber},#{item.userId},#{item.currentUnitPrice},#{item.quantity}
      )
    </foreach>
  </insert>

  <insert id="insertSelective" parameterType="com.dreamingCourse.entity.OrderItem" >
    insert into ykt_order_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="currentUnitPrice != null" >
        current_unit_price,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="isAlive != null" >
        is_alive,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=BIGINT},
      </if>
      <if test="currentUnitPrice != null" >
        #{currentUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="isAlive != null" >
        #{isAlive,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ykt_order_item
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from ykt_order_item
    where id = #{id,jdbcType=INTEGER}
  </select>


    <select id="findItemByUserIdAndOrderNum" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from ykt_order_item
    where user_id = #{userId} and order_number=#{orderNumber}

  </select>


</mapper>